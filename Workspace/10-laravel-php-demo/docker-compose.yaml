# this will hold both application containers and utility containers
version: '3.6'

services:
  # APPLICATION CONTAINERS
  # the nginx server - which will take all the incoming requests and trigger the PHP interpreter.
  # What this server should do in this application is that it should have a look at incoming requests
  # and eventually funnel them to our PHP container, which we'll have later, and let that container execute our PHP code.
  server:
    # using official nginx image - https://hub.docker.com/_/nginx
    image: nginx:stable-alpine
    # as per official nginx image docs, nginx exposes port 80
    ports:
      - '8000:80'
    volumes:
      # as per official nginx image docs
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro

  # PHP container - which is responsible for running and executing our PHP code and also the Laravel code.
  php:
    # provide custom dockerfile name from ./dockerfiles/php.dockerfile
    build:
      context: ./dockerfiles
      dockerfile: php.dockerfile
    # ensure that this php interpreter reaches our laravel source code.
    # and that source code will be available at /var/www/html
    volumes:
      # :delegated is for optimization.
      # It in the end means that if the containers should write some data back to localhost,
      # it's not instantly reflected back to the host machine,
      # instead it is basically processed in batches, and therefore performance is a bit better.
      - ./src:/var/www/html:delegated

  # mysql db
  mysql:
    image: mysql:5.7
    env_file:
      - ./env/mysql.env

  # UTILITY CONTAINERS
  # This utility container will then not only be used internally by Laravel,
  # but can be used by us to also set up a Laravel application in the first place.
  composer:
    build:
      context: ./dockerfiles
      dockerfile: composer.dockerfile
    volumes:
      # now if we use composer to, for example, create a Laravel application in /var/www/html folder inside of the container.
      # This will then be mirrored back into our src folder on the local host machine.
      - ./src:/var/www/html
#   artisan:
#   npm:
